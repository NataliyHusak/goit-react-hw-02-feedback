{"version":3,"sources":["components/Feedback/Feedback.module.css","components/Statistic/Statistic.module.css","components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/Feedback/Feedback.jsx","components/Statistic/Statistic.jsx","components/Statistics/Statistics.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","components/App.jsx","index.js"],"names":["module","exports","Feedback","options","onLeaveFeedback","good","neutral","bad","className","Styles","feedbackSection","feedbackButton","type","onClick","name","data-value","Statistic","label","value","item","Statistics","total","positivePercentage","statistics","title","Section","children","section","Notification","message","App","state","handleBtnClick","e","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","this","percentage","Number","toFixed","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ccff0bde.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackSection\":\"Feedback_feedbackSection__2XU2L\",\"feedbackButton\":\"Feedback_feedbackButton__3KDrw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Statistic_item__2haw7\",\"label\":\"Statistic_label__OIxe8\",\"value\":\"Statistic_value__2UWt0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__3kujw\",\"title\":\"Statistics_title__3sFLc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2UAOw\",\"title\":\"Section_title__uYxFM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Notification_title__12kXQ\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Styles from './Feedback.module.css';\r\n\r\nconst Feedback = ({ options, onLeaveFeedback }) => {\r\n  const { good, neutral, bad } = options;\r\n  return (\r\n    <div className={Styles.feedbackSection}>\r\n      <button\r\n        className={Styles.feedbackButton}\r\n        type=\"button\"\r\n        onClick={onLeaveFeedback}\r\n        name=\"good\"\r\n        data-value={good}\r\n      >\r\n        Good\r\n      </button>\r\n      <button\r\n        className={Styles.feedbackButton}\r\n        type=\"button\"\r\n        onClick={onLeaveFeedback}\r\n        name=\"neutral\"\r\n        data-value={neutral}\r\n      >\r\n        Neutral\r\n      </button>\r\n      <button\r\n        className={Styles.feedbackButton}\r\n        type=\"button\"\r\n        onClick={onLeaveFeedback}\r\n        name=\"bad\"\r\n        data-value={bad}\r\n      >\r\n        Bad\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedback.propTypes = {\r\n  options: PropTypes.shape({\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\nexport default Feedback;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Styles from './Statistic.module.css';\r\n\r\nconst Statistic = ({ label, value }) => (\r\n  <li className={Styles.item}>\r\n    <span className={Styles.label}>{label}</span>\r\n    {label !== 'Positive feedback' ? (\r\n      <div className={Styles.value}>{value}</div>\r\n    ) : (\r\n      <div className={Styles.value}>{value} &#37;</div>\r\n    )}\r\n  </li>\r\n);\r\nStatistic.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n};\r\nexport default Statistic;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Statistic from '../Statistic/Statistic';\r\nimport Styles from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <ul className={Styles.statistics}>\r\n    <li>\r\n      <h3 className={Styles.title}>Statistics</h3>\r\n    </li>\r\n    <Statistic label=\"Good\" value={good} />\r\n    <Statistic label=\"Neutral\" value={neutral} />\r\n    <Statistic label=\"Bad\" value={bad} />\r\n    <Statistic label=\"Total\" value={total} />\r\n    <Statistic label=\"Positive feedback\" value={positivePercentage} />\r\n  </ul>\r\n);\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\nexport default Statistics;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Styles from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section className={Styles.section}>\r\n    <h2 className={Styles.title}>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Styles from './Notification.module.css';\r\n\r\nexport default function Notification({ message }) {\r\n  return (\r\n    <div>\r\n      <h2 className={Styles.title}>{message}</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};","import React, { Component } from \"react\";\r\nimport Feedback from \"./Feedback/Feedback\";\r\nimport Statistics from \"./Statistics/Statistics\";\r\nimport Section from \"./Section/Section\";\r\nimport Notification from \"./Notification/Notification\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0\r\n  };\r\n\r\n  handleBtnClick = e => {\r\n    const { name } = e.target;\r\n    this.setState(prevState => ({ [name]: prevState[name] + 1 }));\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    const { good, neutral, bad } = this.state;\r\n    return good + neutral + bad;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const { good } = this.state;\r\n    return (good / this.countTotalFeedback()) * 100;\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    const total = this.countTotalFeedback();\r\n    const percentage = Number(\r\n      this.countPositiveFeedbackPercentage().toFixed(0)\r\n    );\r\n    return (\r\n      <>\r\n        <Section title=\"Please leave feedback\">\r\n          <Feedback\r\n            options={this.state}\r\n            onLeaveFeedback={this.handleBtnClick}\r\n          />\r\n          {this.countTotalFeedback() < 1 ? (\r\n            <Notification message=\"No feedback given\" />\r\n          ) : (\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={total}\r\n              positivePercentage={percentage}\r\n            />\r\n          )}\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","  \r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}